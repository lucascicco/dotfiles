---
- name: "Check if docker is already installed"
  package:
    name: docker
    state: present
  check_mode: true
  register: docker
- name: "Install docker required packages"
  become_user: root
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - software-properties-common
      - lsb-release
      - gnupg
    state: latest
- name: "Add gpg key for ubuntu"
  shell: |
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo \
     "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
     $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  when: ansible_distribution == 'Ubuntu' and docker.changed
- name: "Add gpg key for debian"
  shell: |
    curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo \
     "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
     $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  when: ansible_distribution == 'Debian' and docker.changed
- name: "Install docker"
  become_user: root
  apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
- name: "Grant permissions to execute docker"
  shell: |
    usermod -aG docker ${USER}
    su - ${USER}
    id -nG
- name: Check docker compose latest version
  shell: >
    curl -s https://api.github.com/repos/docker/compose/releases/latest | grep browser_download_url  | grep docker-compose-linux-x86_64 | cut -d '"' -f 4 | head -1
  register: compose_content
- name: Install docker compose
  become_user: root
  get_url:
    url: "{{ compose_content.stdout }}"
    dest: /usr/local/bin/docker-compose
    mode: 755
  when: compose_content.changed
