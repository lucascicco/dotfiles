# instant prompt
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"
export P10K_CACHE="${XDG_CACHE_HOME}/p10k-instant-prompt-${(%):-%n}.zsh"
[[ -r "${P10K_CACHE}" ]] && source "${P10K_CACHE}"

export DOTFILES_DIR="$HOME/dotfiles"
export ZSH_CONFIG_DIR="${DOTFILES_DIR}/config/zsh"

# zsh
export ZSHRC_CORE="${DOTFILES_DIR}/config/zsh/.zshrc_core.sh"
export ALIAS_ZSH="${ZSH_CONFIG_DIR}/alias.zsh"

# p10k
export P10K_CONFIG="${DOTFILES_DIR}/config/zsh/p10k.zsh"
[[ -s "${P10K_CONFIG}" ]] && source "${P10K_CONFIG}"

# Utils
if [[ ! -s "${ZSHRC_CORE}" ]]; then
  echo "Cannot find ${ZSHRC_CORE}" >&2
  return 1
fi
source "${ZSHRC_CORE}"
load_bashrc

# oh-my-zsh config #
ZSH_WAKATIME_PROJECT_DETECTION="true"
CASE_SENSITIVE="true"
COMPLETION_WAITING_DOTS="true"
DISABLE_AUTO_UPDATE="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"
HIST_STAMPS="yyyy-mm-dd"
DISABLE_VENV_CD=1
HISTFILE=$HOME/.zsh_history
HISTSIZE=1000000000
SAVEHIST=$HISTSIZE

# Load bashrc and antidote #
ANTIDOTE_PATH="$(find_antidote)"
if [[ -z "${ANTIDOTE_PATH}" ]]; then
  echo "Cannot find antidote" >&2
  return 1
fi
source "${ANTIDOTE_PATH}"
ANTIDOTE_DIR="$(dirname "${ANTIDOTE_PATH}")"
if [[ -d "${ANTIDOTE_DIR}" ]]; then
  LOCAL_ZSH_PLUGINS="${HOME}/.zsh_plugins"
  LOCAL_ZSH_PLUGINS_TXT="${LOCAL_ZSH_PLUGINS}.txt"
  if [[ ! -s "${LOCAL_ZSH_PLUGINS_TXT}" ]]; then
    echo "Cannot find ${LOCAL_ZSH_PLUGINS_TXT}" >&2
    return 1
  fi
  fpath=(${ANTIDOTE_DIR}/functions $fpath)
  autoload -Uz antidote
  LOCAL_ZSH_PLUGINS_ZSH="${LOCAL_ZSH_PLUGINS}.zsh"
  if [[ ! ${LOCAL_ZSH_PLUGINS_ZSH} -nt ${LOCAL_ZSH_PLUGINS_TXT} ]]; then
    antidote bundle <${LOCAL_ZSH_PLUGINS_TXT} >|${LOCAL_ZSH_PLUGINS_ZSH}
  fi
  source ${LOCAL_ZSH_PLUGINS_ZSH}
fi

# aliases
KUBE_CMD=$(mise which kubecolor >/dev/null 2>&1 && echo "kubecolor" || echo "kubectl")
alias k=${KUBE_CMD}
[[ -s ${ALIAS_ZSH} ]] && source ${ALIAS_ZSH}

autoload -Uz promptinit && promptinit && prompt powerlevel10k
